# vim: ft=lisp

(def test (import "./test"))
(def assert (test assert))

((test case)
 "valid"
 (func ()
       (do
         (def x 42)
         (assert = x 42))

       (do
         (def x (+ 1 2))
         (assert = x 3))

       (do
         (def x 1)
         (assert = x 1)
         (set x 2)
         (assert = x 2))

       (do
         (def x "a")
         (do
           (def x "b")
           (assert = x "b"))
         (assert = x "a"))))

((test case)
 "invalid"
 (func ()
       (try-catch
         (func (err trace)
               (assert = err (list "not exist" "x does not exist.")))
         (set x 42))

       (try-catch
         (func (err trace)
               (assert = err (list "already exist" "x is already exist.")))
         (def x 1)
         (def x 2))

       (try-catch
         (func (err trace)
               (assert = err (list "unmatched arguments" "`def` needs exact 2 arguments but got 1.")))

         (def a))

       (try-catch
         (func (err trace)
               (assert = err (list "unmatched arguments" "`set` needs exact 2 arguments but got 3.")))

         (set a b c))))
