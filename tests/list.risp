" vim: set ft=lisp : "

(def test (import "./test.risp"))
(def assert (test assert))

((test case)
 "map"
 (func ()
       (def f (func (x) (* x 2)))
       (def xs (map f (seq 5)))
       (assert = (list 2 4 6 8 10) xs)

       (assert = (list 0 1 0) (map not (seq -1 1)))

       (assert =
               (list "a" "b")
               (map car (list (list "a" 1) (list "b" 2))))))

((test case)
 "fold"
 (func ()
       (assert = 15 (fold + (seq 5)))
       (assert = 120 (fold * (seq 5)))

       (assert = "hello" (fold + (list "he" "l" "lo")))

       (assert =
               "ab"
               (fold (func (acc cur) (+ acc (car cur)))
                     (list "" (list "a" 1) (list "b" 2))))))
