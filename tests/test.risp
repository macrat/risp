" vim: set ft=lisp : "

(def assert (func (operator wanted actual)
                  (if (not (operator wanted actual))
                    (throw (list "assertion unsatisfied" (list operator wanted actual))))))

(def print-traceback
     (func (err trace)
           (while (if (= (get 0 err) "assertion unsatisfied")
                    (tail -2 trace)
                    trace)
                  (println " " (fold (func (acc cur) (+ acc ": " (string cur))) (get 0 trace)))
                  (set trace (tail -1 trace)))
           (println)
           (println err)))

(def passed 0)
(def failed 0)
(def prefix "")

(def case (func (name fun)
                (try-catch (func (err trace)
                                 (set prefix old-prefix)
                                 (set failed (+ failed 1))
                                 (println (+ prefix name " ... failure"))
                                 (println)
                                 (print-traceback err trace)
                                 (println))
                           (def old-prefix prefix)
                           (set prefix (+ prefix name " / "))
                           (fun)
                           (set passed (+ passed 1))
                           (set prefix old-prefix)
                           (println (+ prefix name " ... ok")))))
