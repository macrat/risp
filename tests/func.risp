" vim: set ft=lisp : "

(def test (import "./test.risp"))
(def assert (test assert))


((test case)
 "recursive loop"
 (func ()
       (def f (func (x)
                    (def l (func (n)
                                 (if (> n 1) (do
                                               (set x (* x n))
                                               (l (- n 1))))
                                 x))
                    (l (- x 1))))

       (assert = 120 (f 5))))

((test case)
 "while loop"
 (func ()
       (def f (func (x)
                    (def n x)
                    (while (> n 1)
                           (set n (- n 1))
                           (set x (* x n)))))

       (assert = 120 (f 5))))

((test case)
 "higher order operation"
 (func ()
       (def f (func (x)
                    (map (func (n) (set x (* x n)))
                         (seq (- x 1)))
                    x))

       (assert = 120 (f 5))))

((test case)
 "capture scope"
 (func ()
       (def counter (do
                      (def x 0)
                      (func ()
                            (set x (+ x 1))
                            x)))

       (def xs (list
                 (counter)
                 (counter)
                 (counter)))

       (assert = xs (list 1 2 3))))
